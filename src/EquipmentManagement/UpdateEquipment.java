/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EquipmentManagement;

import java.sql.*;
import java.sql.DriverManager;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
import java.text.DateFormat;
import javax.swing.JOptionPane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author Hp
 */
public class UpdateEquipment extends javax.swing.JFrame {

    private ManageEquipment previousFrame;
    private DefaultTableModel tableModel;
    private Equipment equipment;
    int index;
    EquipmentDB dbe;
    EquipmentDB equipmentDB = new EquipmentDB();
    /**
     * Creates new form UpdateEquipment
     */
    public UpdateEquipment() {
        initComponents();
        setLocationRelativeTo(null);
        equipment = new Equipment();
        tableModel = (DefaultTableModel) tblEquipment.getModel();
        
        EquipmentDB.displayEquipmentsOnTable(tblEquipment);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtequipmentid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttype = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtcreateby = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtcreatedate = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEquipment = new javax.swing.JTable();
        cmbstatus = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setText("Update Equipment");

        jLabel2.setText("Equipment ID");

        txtequipmentid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtequipmentidActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        jLabel4.setText("Type");

        txttype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttypeActionPerformed(evt);
            }
        });

        jLabel5.setText("Status");

        jLabel6.setText("Price");

        jLabel7.setText("Create By");

        jLabel8.setText("Create Date");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tblEquipment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment ID", "Name", "Type", "Price", "Status", "Create By", "Create Date"
            }
        ));
        jScrollPane2.setViewportView(tblEquipment);

        cmbstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Good", "Broken", "Under repair" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtequipmentid)
                            .addComponent(txtprice)
                            .addComponent(txtcreatedate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtcreateby))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(txttype, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtequipmentid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txttype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(txtcreateby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtcreatedate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtequipmentidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtequipmentidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtequipmentidActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txttypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttypeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
//        int id = Integer.parseInt(txtequipmentid.getText());
//    String name = txtname.getText();
//    String type = txttype.getText();
//    float price = Float.parseFloat(txtprice.getText());
//    String status = cmbstatus.getSelectedItem().toString();
//    String createBy = txtcreateby.getText();
//
//    // Kiểm tra tính hợp lệ của dữ liệu
//    if (txtequipmentid.getText().equals("") || txtname.getText().equals("") || txttype.getText().equals("") 
//        || txtprice.getText().equals("") || txtcreateby.getText().equals("") || txtcreatedate.getText().equals("")) {
//        JOptionPane.showMessageDialog(null, "Please enter full information");
//        return;
//    }
//    
//    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
//    String url = "jdbc:sqlserver://localhost:1433;databaseName=BHX";
//    String username = "sa";
//    String password = "123456";
//    Connection connection = null;
//    try {
//        Class.forName(driver);
//        connection = DriverManager.getConnection(url, username, password);
//        System.out.println("Kết nối với SQL Server thành công!");
//
//        // Tạo câu truy vấn UPDATE và thực thi
//        String updateQuery = "UPDATE Equipment SET name=?, type=?, price=?, status=?, createBy=? WHERE id=?";
//        PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
//        preparedStatement.setString(1, name);
//        preparedStatement.setString(2, type);
//        preparedStatement.setFloat(3, price);
//        preparedStatement.setString(4, status);
//        preparedStatement.setString(5, createBy);
//        preparedStatement.setInt(6, id);
//        preparedStatement.executeUpdate();  
//
//        // Cập nhật dữ liệu trên bảng hiển thị
//        int rowIndex = -1;
//        for (int i = 0; i < tableModel.getRowCount(); i++) {
//            if (tableModel.getValueAt(i, 0).equals(id)) {
//                rowIndex = i;
//                break;
//            }
//        }
//        if (rowIndex != -1) {
//            tableModel.setValueAt(name, rowIndex, 1);
//            tableModel.setValueAt(type, rowIndex, 2);
//            tableModel.setValueAt(price, rowIndex, 3);
//            tableModel.setValueAt(status, rowIndex, 4);
//            tableModel.setValueAt(createBy, rowIndex, 5);
//        }
//
//        // Xóa dữ liệu trên các trường nhập
//        txtequipmentid.setText("");
//        txtname.setText("");
//        txttype.setText("");
//        txtprice.setText("");
//        txtcreateby.setText("");
//        txtcreatedate.setText("");
//
//        JOptionPane.showMessageDialog(null, "Update successful");
//    } catch (Exception e) {
//        e.printStackTrace();
//        JOptionPane.showMessageDialog(null, "Update failed");
//    } finally {
//        // Đóng kết nối
//        if (connection != null) {
//            try {
//                connection.close();
//            } catch (SQLException e) {
//                e.printStackTrace();
//            }
//        }
//    }

// Lấy chỉ mục hàng đã chọn trong bảng tblEquipment
    int selectedRow = tblEquipment.getSelectedRow();
    
    // Kiểm tra xem đã chọn hàng hay chưa
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to update");
        return;
    }
    
    // Lấy dữ liệu từ hàng đã chọn
    String name = txtname.getText();
    String type = txttype.getText();
    float price = Float.parseFloat(txtprice.getText());
    String status = cmbstatus.getSelectedItem().toString();
    String createBy = txtcreateby.getText();

    String createDateStr = txtcreatedate.getText();
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Timestamp createDate;
    try {
        java.util.Date parsedDate = dateFormat.parse(createDateStr);
        createDate = new Timestamp(parsedDate.getTime());
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(null, "Invalid create date. Please enter a valid date (yyyy-MM-dd)");
        return;
    }
    
    // Kiểm tra tính hợp lệ của dữ liệu nhập
    if (name.equals("") || type.equals("") || txtprice.getText().equals("")
            || createBy.equals("") || createDateStr.equals("")) {
        JOptionPane.showMessageDialog(null, "Please enter full information");
        return;
    }
    
    // Lấy ID từ hàng đã chọn
    int id = (int) tblEquipment.getValueAt(selectedRow, 0);
    
    // Tạo đối tượng Equipment mới với thông tin cập nhật
    Equipment updatedEquipment = new Equipment(id, name, type, price, status, createBy, createDate);
    
    // Cập nhật dữ liệu trong cơ sở dữ liệu
    EquipmentDB equipmentDB = new EquipmentDB();
    int rowsUpdated = equipmentDB.UpdateDataUsingPrepareStatement(updatedEquipment);
    
    // Kiểm tra xem cập nhật thành công hay không
    if (rowsUpdated > 0) {
        // Cập nhật thông tin trên bảng tblEquipment
        tableModel.setValueAt(name, selectedRow, 1);
        tableModel.setValueAt(type, selectedRow, 2);
        tableModel.setValueAt(price, selectedRow, 3);
        tableModel.setValueAt(status, selectedRow, 4);
        tableModel.setValueAt(createBy, selectedRow, 5);
        tableModel.setValueAt(createDate, selectedRow, 6);
        
        JOptionPane.showMessageDialog(null, "Update successful");
    } else {
        JOptionPane.showMessageDialog(null, "Update failed");
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateEquipment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbstatus;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblEquipment;
    private javax.swing.JTextField txtcreateby;
    private javax.swing.JTextField txtcreatedate;
    private javax.swing.JTextField txtequipmentid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txttype;
    // End of variables declaration//GEN-END:variables
}
